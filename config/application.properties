################## Network Configuration ###########
# Provide network details
####################################################

##################### Prepod network #################
store.cardano.host=preprod-node.world.dev.cardano.org
store.cardano.port=30000
store.cardano.protocol-magic=1

#Uncomment below for preview
#store.cardano.host=preview-node.world.dev.cardano.org
#store.cardano.port=30002
#store.cardano.protocol-magic=2

#Ucomment below for mainnet
#store.cardano.host=192.168.0.228
#store.cardano.port=6000
#store.cardano.protocol-magic=764824073

#Sanchonet
#store.cardano.host=sanchonet-node.play.dev.cardano.org
#store.cardano.port=3001
#store.cardano.protocol-magic=4

################ Local Node Configuration for Node-to-Client (Optional) ######
# Most of the information in the indexer are fetched through remote
# host and port configured in the previous section, but few information
# like protocol parameters are fetched through "Node Socket" file of
# local Cardano node using node-to-client protocol. The transaction submission
# endpoint also uses this interface.
# If a local node configuration is not found, the yaci-store just ignores those data.
# Alternatively, Local node socket for node-to-client protocol can be exposed to remote client
# using relay like "socat". In that case, set cardano.n2c.host and cardano.n2c.port
###########################################################
#store.cardano.n2c-node-socket-path=/Users/satya/work/cardano-node/preprod/db/node.socket
#store.cardano.n2c-host=192.168.0.228
#store.cardano.n2c-port=31001

############### Genesis files #############################
# The application reads the below genesis files to get data like slotLength, maxLovelaceSupply
# etc. If this section is not provided, the application will try to use the values defined in the application itself. The
# values for all known networks are already defined in the application. So, this section is not required for known networks.
############################################################
#store.cardano.byron-genesis-file=/Users/satya/work/cardano-node/preprod/files/byron-genesis.json
#store.cardano.shelley-genesis-file=/Users/satya/work/cardano-node/preprod/files/shelley-genesis.json
#store.cardano.alonzo-genesis-file=/Users/satya/work/cardano-node/preprod/files/alonzo-genesis.json
#store.cardano.conway-genesis-file=/Users/satya/work/cardano-node/preprod/files/conway-genesis.json

####################
# Submit Api url
####################
#store.cardano.submit-api-url=http://localhost:8090/api/submit/tx

################################
#Enable Tx mempool monitoring
################################
#store.cardano.mempool-monitoring-enabled=true

################## DB Configuration ################
# Uncomment one of the database configuration
#
####################################################

##################### H2 DB #######################
spring.datasource.url=jdbc:h2:mem:mydb
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true

##################### Postgres DB #######################
#spring.datasource.url=jdbc:postgresql://localhost:5432/yaci_indexer
#spring.datasource.username=user
#spring.datasource.password=

##################### MySQL DB #######################
#spring.datasource.url=jdbc:mysql://localhost:3306/yaci_indexer
#spring.datasource.username=user
#spring.datasource.password=password

#########################################################
#       Log Configuration
#########################################################
logging.file.name= ./logs/yaci-store.log

##########################################################
#      Sync Configuration
# Uncomment the following properties if you want to sync from a particular slot and blockhash.
# By default, the application will start syncing from the genesis block
##########################################################
#store.cardano.sync-start-slot=2738868
#store.cardano.sync-start-blockhash=a5c72a0e74cf066873ae7741c488acaef32746e1c4ac3b0d49c4acf4add1a47c
#store.cardano.sync-start-byron-block-number=2737340

#store.cardano.sync-stop-slot=76667163
#store.cardano.sync-stop-blockhash=3e9a93afb174503befd4e8dabd52f73e6c4e9c3c76886713475dd43b00e6acbf

#################################################
# Epoch aggregation interval in seconds. Epoch aggregations like total txs in an epoch, total fees in an epoch etc are
# calculated in a particular interval. This interval is defined by this property.
# As the current implementation of epoch aggregation is not efficient, it is recommended to keep this value high if you are
# running the application for mainnet. When the aggregation is running on mainnet, you may see lag in the sync process. But
# once the aggregation is done, the sync process will catch up. This will be fixed in the future releases.

# For test networks, it is fine to keep this value low like 300 (5 minutes).
# Default value is 14400 (4 hours)
#################################################
store.blocks.epoch-calculation-interval=14400
store.blocks.epoch-calculation-enabled=false

#######################################################################
# Enable / Disable local utxo client
# By default, local utxo client is enabled if utxo module is available in the classpath. This flag is useful for testing
# when you want to disable local utxo client and use remote utxo client.
#######################################################################
#store.enable.local.utxo.client=false

## Set the following flag to false if you want to disable auto start of sync process. Defualt is true.
#store.sync-auto-start=true

###################################################
# Account module configuration
# If you are enabling this module, you need to sync from the beginning and provide genesis files path in genesis file
# configuration section.
###################################################
store.account.enabled=false
store.account.balance-aggregation-enabled=true
store.account.history-cleanup-enabled=false

###################################################
# The following properties control the batch processing of balance aggregation.
# Batch aggregation is useful during initial sync when there are lot of blocks to process and balance aggregation.
# For example. mainnet network
###################################################
store.account.batch-balance-aggregation-enabled=false
store.account.batch-balance-aggregation-scheduler-enabled=false

###################################################
# Parallel processing configuration
###################################################
store.executor.enable-parallel-processing=false
store.executor.block-processing-threads=15
store.executor.event-processing-threads=30

store.executor.blocks-batch-size=200
store.executor.blocks-partition-size=10

store.executor.use-virtual-thread-for-batch-processing=false
store.executor.use-virtual-thread-for-event-processing=true

management.endpoints.web.exposure.include=health,info,prometheus

## Enable this flag to automatically delete optional indexes at the start of synchronization and recreate them once it approaches completion
store.auto-index-management=true

## Ping the node at regular intervals to maintain the connection. The default interval is 10 seconds.
#store.cardano.keep-alive-interval=10000
