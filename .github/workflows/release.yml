name: Publish package to the Maven Central Repository
#on:
#  release:
#    types: [created]
on:
  push:
    tags:
      - 'v*'
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'liberica'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: 'Get Version Number'
        run: |
          ARTIFACT_VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          echo "VERSION=${ARTIFACT_VERSION}" >> $GITHUB_ENV
          echo "tag=${ARTIFACT_VERSION}" > docker/compose/.env
      - name: Build with Gradle
        run: ./gradlew clean build distZip dockerZip
      - name: Decode GPG Key
        run: |
          mkdir -p ~/.gradle/
          echo "${{secrets.SIGNING_KEY}}" > ~/.gradle/secring.gpg.b64
          base64 -d ~/.gradle/secring.gpg.b64 > ~/.gradle/secring.gpg
      - name: Publish package
        run: ./gradlew publish -Psigning.keyId=${{ secrets.SIGNING_KEY_ID }} -Psigning.password=${{ secrets.SIGNING_PASSWORD }} -Psigning.secretKeyRingFile=$(echo ~/.gradle/secring.gpg) --warn --stacktrace
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            applications/build/dist/yaci-store-${{env.VERSION}}.zip
            applications/build/dist/yaci-store-docker-${{env.VERSION}}.zip
            applications/utxo-indexer/build/libs/yaci-store-utxo-indexer-${{env.VERSION}}.jar            
            applications/admin/build/libs/yaci-store-admin-${{env.VERSION}}.jar
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Close And Release Repository
#        run: ./gradlew closeAndReleaseRepository
#        env:
#          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push yaci-store docker image
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          target: yaci-store
          build-args: |
            TARGET=yaci-store
            APP_VERSION=${{env.VERSION}}
          tags: bloxbean/yaci-store:${{ env.VERSION }}

      - name: Build and push yaci-store-ledger-state docker image
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          target: yaci-store-ledger-state
          build-args: |
            TARGET=yaci-store-ledger-state
            APP_VERSION=${{env.VERSION}}
          tags: bloxbean/yaci-store-ledger-state:${{ env.VERSION }}

      - name: Build and push yaci-store-utxo-indexer docker image
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          target: yaci-store-utxo-indexer
          build-args: |
            TARGET=yaci-store-utxo-indexer
            APP_VERSION=${{env.VERSION}}
          tags: bloxbean/yaci-store-utxo-indexer:${{ env.VERSION }}

      - name: Build and push yaci-store-admin docker image
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          target: yaci-store-admin
          build-args: |
            TARGET=yaci-store-admin
            APP_VERSION=${{env.VERSION}}
          tags: bloxbean/yaci-store-admin:${{ env.VERSION }}

      - name: Build and push yaci-store-admin-cli docker image
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          target: yaci-store-admin-cli
          build-args: |
            TARGET=yaci-store-admin-cli
            APP_VERSION=${{env.VERSION}}
          tags: bloxbean/yaci-store-admin-cli:${{ env.VERSION }}
