plugins {
    id 'io.spring.dependency-management' version '1.1.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

//    repositories {
//        maven {
//            url "https://oss.sonatype.org/content/repositories/snapshots"
//        }
//    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    archivesBaseName = 'yaci-store-' + project.name

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:3.0.0")
        }

        dependencies {
            dependency 'com.bloxbean.cardano:yaci:0.1.9'
            dependency 'com.bloxbean.cardano:cardano-client-lib:0.4.3'
            dependency 'co.nstant.in:cbor:0.9'

            dependency 'com.vladmihalcea:hibernate-types-60:2.20.0'
            dependency 'mysql:mysql-connector-java:8.0.32'
            dependency 'org.postgresql:postgresql:42.5.0'
            dependency 'org.codehaus.janino:janino:3.1.8'
            dependency 'com.google.guava:guava:31.1-jre'
            dependency 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0'
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
    }

    compileJava {
        sourceCompatibility = '17'
        targetCompatibility = '17'

        options.compilerArgs += ["-Aproject=${project.group}/${project.name}", "-parameters"]
    }

    tasks.withType(Javadoc) {
        options.encoding = 'UTF-8'
    }

    task sourceJar(type: Jar) {
        classifier "sources"
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier "javadoc"
        from javadoc.destinationDir
    }

    artifacts {
        archives jar
        archives sourceJar
        archives javadocJar
    }

    test {
        useJUnitPlatform()
    }
}
