################## Network Configuration ###########
# Provide network details
####################################################

##################### Prepod network #################
store.cardano.host=preprod-node.world.dev.cardano.org
store.cardano.port=30000
store.cardano.protocol-magic=1

#Uncomment below for preview
#store.cardano.host=preview-node.world.dev.cardano.org
#store.cardano.port=30002
#store.cardano.protocol-magic=2

#Ucomment below for mainnet
#store.cardano.host=relays-new.cardano-mainnet.iohk.io
#store.cardano.port=3001
#store.cardano.protocol-magic=764824073

#Sanchonet
#store.cardano.host=sanchonet-node.play.dev.cardano.org
#store.cardano.port=3001
#store.cardano.protocol-magic=4

################ Local Node Configuration for Node-to-Client (Optional) ######
# Most of the information in the indexer are fetched through remote
# host and port configured in the previous section, but some information
# like current protocol parameters are fetched through "Node Socket" file of
# local Cardano node using node-to-client protocol. The transaction submission
# endpoint also uses this interface.
# If a local node configuration is not found, the yaci-store just ignores those data.
# Alternatively, Local node socket for node-to-client protocol can be exposed to remote client
# using relay like "socat". In that case, set cardano.n2c.host and cardano.n2c.port
###########################################################
#store.cardano.n2c-node-socket-path=/Users/satya/work/cardano-node/preprod/db/node.socket
#store.cardano.n2c-host=192.168.0.228
#store.cardano.n2c-port=31001

############### Genesis files #############################
# The application reads the below genesis files to get data like slotLength, maxLovelaceSupply
# etc. If this section is not provided, the application will try to use the values defined in the application itself. The
# values for all known networks are already defined in the application. So, this section is not required for known networks.
############################################################
#store.cardano.byron-genesis-file=/Users/satya/work/cardano-node/preprod/files/byron-genesis.json
#store.cardano.shelley-genesis-file=/Users/satya/work/cardano-node/preprod/files/shelley-genesis.json
#store.cardano.alonzo-genesis-file=/Users/satya/work/cardano-node/preprod/files/alonzo-genesis.json
#store.cardano.conway-genesis-file=/Users/satya/work/cardano-node/preprod/files/conway-genesis.json

################## DB Configuration ################
# Uncomment one of the database configuration
#
####################################################

##################### H2 DB #######################
#spring.datasource.url=jdbc:h2:mem:mydb
##spring.datasource.url=jdbc:h2:file:~/storedb
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.h2.console.enabled=true

##################### Postgres DB #######################
#spring.datasource.url=jdbc:postgresql://localhost:5433/yaci_indexer?currentSchema=preprod
#spring.datasource.username=user
#spring.datasource.password=

##################### MySQL DB #######################
#spring.datasource.url=jdbc:mysql://localhost:3306/yaci_indexer
#spring.datasource.username=user
#spring.datasource.password=password

#################### Other DB Settings ##########
spring.datasource.hikari.maximum-pool-size=30
#spring.datasource.hikari.minimum-idle=5
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true
#spring.jpa.properties.hibernate.generate_statistics=true
#spring.jpa.show-sql=true

#########################################################
#       Log Configuration
#########################################################
logging.file.name= ./logs/yaci-store.log

##########################################################
#      Sync Configuration
# Uncomment the following properties if you want to sync from a particular slot and blockhash.
# By default, the application will start syncing from the genesis block
##########################################################
#store.cardano.sync-start-slot=2738868
#store.cardano.sync-start-blockhash=a5c72a0e74cf066873ae7741c488acaef32746e1c4ac3b0d49c4acf4add1a47c
#store.cardano.sync-start-byron-block-number=2737340

#store.cardano.sync-stop-slot=76667163
#store.cardano.sync-stop-blockhash=3e9a93afb174503befd4e8dabd52f73e6c4e9c3c76886713475dd43b00e6acbf

## Set the following flag to false if you want to disable auto start of sync process. Defualt is true.
#store.sync-auto-start=true


###################################################
# Parallel processing configuration
###################################################
store.executor.enable-parallel-processing=true

store.executor.blocks-batch-size=100
store.executor.blocks-partition-size=10

store.executor.use-virtual-thread-for-batch-processing=true
store.executor.use-virtual-thread-for-event-processing=true

# The following thread counts are ignored if virtual threads are enabled
#store.executor.block-processing-threads=15
#store.executor.event-processing-threads=30

management.endpoints.web.exposure.include=health,info,prometheus
#management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

## Enable this flag to automatically delete optional indexes at the start of synchronization and recreate them once it approaches completion
store.auto-index-management=true

## Ping the node at regular intervals to maintain the connection. The default interval is 10 seconds.
#store.cardano.keep-alive-interval=10000

############################################################
# Flags to enable/disable a store.
# Default value = "true", To disable a store, set the flag to "false"
############################################################
#store.assets.enabled=true
#store.blocks.enabled=true
#store.epoch.enabled=true
#store.metadata.enabled=true
#store.mir.enabled=true
#store.script.enabled=true
#store.staking.enabled=true
#store.transaction.enabled=true
#store.utxo.enabled=true
#store.governance.enabled=true

############################################################
# Flags to disable api/controllers for a store
# If a store is already disabled, the api/controllers for that store
# are automatically disabled.
############################################################
#store.assets.api-enabled=false
#store.blocks.api-enabled=false
#store.epoch.api-enabled=false
#store.metadata.api-enabled=false
#store.script.api-enabled=false
#store.staking.api-enabled=false
#store.transaction.api-enabled=false
#store.utxo.api-enabled=false
#store.mir.api-enabled=false
#store.governance.api-enabled=false

############################################################
# Flags to disable specific Tags under api/controllers for a store
# If a store is already disabled, the api/controllers for that store
# are automatically disabled.
############################################################
#store.utxo.endpoints.address.enabled=false
#store.utxo.endpoints.asset.enabled=false
#store.utxo.endpoints.transaction.enabled=false
#store.assets.endpoints.asset.enabled=false
#store.blocks.endpoints.block.enabled=false
#store.blocks.endpoints.epoch.enabled=false
#store.epoch.endpoints.epoch.local.enabled=true
#store.transaction.endpoints.block.enabled=false
#store.transaction.endpoints.transaction.enabled=false
#store.epoch.endpoints.epoch.enabled=false
#store.epoch.endpoints.network.enabled=false
#store.metadata.endpoints.transaction.enabled=false
#store.mir.endpoints.mir.enabled=false
#store.staking.endpoints.pool.enabled=false
#store.staking.endpoints.account.enabled=false
#store.script.endpoints.script.enabled=false
#store.governance.endpoints.govActionProposal.enabled=false
#store.governance.endpoints.votingProcedure.enabled=false

#############################################################
# Enable Spring Boot Admin Client to monitor this application
# Provide URL to Spring Boot Admin Server
#############################################################
#spring.boot.admin.client.url=http://localhost:8888
#spring.boot.admin.client.enabled=true

#####################################
# DB insert batch properties for JOOQ
#####################################
store.db.batch-size=1000
store.db.parallel-insert=true

#########################################################################################################
# UTxO Pruning Configuration (UTxO store)
# Enable or disable UTxO pruning and set the interval in seconds
#
# By default, all spent utxos before store.utxo.pruning-safe-blocks (default 2160) blocks will be pruned.
##########################################################################################################
#store.utxo.pruning-enabled=true
#store.utxo.pruning.interval=600

################################################################################
# Enable auto-recovery service. It is supported through admin module
# It monitors the sync status and restarts the sync process if required.
# The interval is defined in seconds.
################################################################################
#store.admin.auto-recovery-enabled=true
#store.admin.health-check-interval=60

#store.admin.api-enabled=true

#### Keep alive interval in milliseconds for Cardano node ####
#store.cardano.keep-alive-interval=10000

#####################################
# Log level configuration
#####################################
logging.level.com.bloxbean.cardano.yaci.core.protocol.keepalive=INFO
logging.level.com.bloxbean.cardano.yaci.store.core.service=INFO


#####################################################################################################
# Transaction submission configuration
#
# If you would like to submit transactions through the store, it can be done in multiple ways based on the configuration.
#
# 1. Local N2C Protocol: By default, if the store.cardano.n2c-node-socket-path or store.cardano.n2c-host/store.cardano.n2c-port are provided,
# the transaction submission will be done through node-to-client protocol. In swagger ui, you should see the transaction submission
# endpoint as "Local Tx Submission Service"
#
# 2. Submit API : If you would like to submit transactions through submit api, store.cardano.submit-api-url should be provided. If submit api is enabled and also
# node-to-client protocol is enabled, the transaction submission will be done through submit api. In swagger ui, you should see the transaction submission
# endpoint as "Tx Submission Service". (Recommended)
#
# 3. Ogmios : If store.cardano.ogmios-url is provided, the ogmios transaction submission will be enabled. In swagger ui, you should see the transaction submission
# endpoint as "Ogmios Tx Submission Service". But, if submit api url is also enabled, the transaction submission will be done through submit api.
#
# Additionally, ogmios url can be used to evaluate the cost of the transaction script through Blockfrost compatible (/utils/txs) api.
# So, a mix setup of submit api and ogmios url is possible where transaction submission is done through submit api and online script cost evaluation is done through ogmios.
#####################################################################################################


####################
# Submit Api url
####################
#store.cardano.submit-api-url=http://submit-api-host:8090/api/submit/tx

#######################################################################################
# Ogmios URL to enable both Tx submission and Tx script cost evaluation through Ogmios
#######################################################################################
#store.cardano.ogmios-url=http://ogmios-host:1337


#################################################
# Epoch aggregation interval in seconds. Epoch aggregations like total txs in an epoch, total fees in an epoch are
# calculated in a particular interval. This interval is defined by this property.
# As the current implementation of epoch aggregation is not efficient, it is recommended to keep this value high if you are
# running the application for mainnet. When the aggregation is running on mainnet, you may see lag in the sync process. But
# once the aggregation is done, the sync process will catch up. This will be fixed in the future releases.

# For test networks, it is fine to keep this value low like 300 (5 minutes).
# Default value is 14400 (4 hours)
#################################################
store.epoch-aggr.enabled=false
store.epoch-aggr.api-enabled=true
store.epoch-aggr.epoch-calculation-interval=14400
store.epoch-aggr.epoch-calculation-enabled=false
